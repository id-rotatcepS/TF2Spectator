<Window x:Class="TF2SpectatorWin.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TF2SpectatorWin"
        mc:Ignorable="d"
        Title="TF2 Spectator" Height="450" Width="800"
        Background="DarkSlateGray">
    <Window.Resources>
        <Style TargetType="Menu">
            <Setter Property="Background" Value="SlateGray"/>
        </Style>
        <Style TargetType="Expander">
            <Setter Property="BorderBrush" Value="DarkGray"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Background" Value="LightGray"/>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Background" Value="DarkOrange"/>
        </Style>

        <Style TargetType="TextBox" x:Key="PartyChat">
            <Setter Property="ToolTip" Value="{}Party Chat message format - {0}: bot name - {1}: kick key - {2}: no-kick key - {3}: 'mark' or 'kick'
                    &#x0a;Blank to prevent message"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Foreground" Value="LightGreen"/>
            <Setter Property="Background" Value="LightSlateGray"/>
            <Setter Property="CaretBrush" Value="White"/>
        </Style>
        <!--<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">-->
        <!--<Style TargetType="{x:Type Expander}" x:Key="ExpanderStyle">
        <Setter Property="BorderBrush" Value="DarkGray"/>
      </Style>-->

        <!--<Style TargetType="{x:Type TextBox}" x:Key="MyTextBox">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource MyGreenBrush}"/>
      </Style>

      <Style TargetType="{x:Type TextBlock}" x:Key="MyResultTextBlock">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{DynamicResource MyGreenBrush}"/>
      </Style>

      <Style TargetType="{x:Type Border}" x:Key="MyBorder">
        <Setter Property="BorderBrush" Value="{DynamicResource MyGreenBrush}"/>
        <Setter Property="BorderThickness" Value="4"/>
        <Setter Property="CornerRadius" Value="5"/>
      </Style>-->
        <!--</ResourceDictionary>-->
    </Window.Resources>

    <ScrollViewer VerticalScrollBarVisibility="Auto">
        <StackPanel>
            <Menu x:Name="mainmenu" IsMainMenu="True" >

                <MenuItem Header="Configure">
                    <MenuItem IsChecked="{Binding IsTwitchConnected, Mode=OneWay}" Header="Link Twitch" Command="{Binding LaunchTwitchCommand}"/>
                    <Separator/>
                    <MenuItem IsChecked="{Binding IsParsing, Mode=OneWay}" Header="Monitor Game Lobby" Command="{Binding OpenLobbyCommand}"
                              DataContext="{Binding LobbyTrackerModel}" />
                    <Separator/>
                    <MenuItem Header="Edit Commands..." Command="{Binding OpenCommandsCommand}"/>
                    <Separator/>
                    <MenuItem Header="Save Config" Command="{Binding SaveConfigCommand}" 
                    ToolTip="Saved automatically on close"/>
                </MenuItem>

            </Menu>

            <Expander IsExpanded="{Binding TF2Expanded}">
                <Expander.Header>
                    <StackPanel Orientation="Horizontal">
                        <Label>TF2 ⌨🖱 (Rcon connection)</Label>
                        <Button Content="Edit TF2 Spectator Commands..." Command="{Binding OpenCommandsCommand}" HorizontalAlignment="Center"/>
                    </StackPanel>
                </Expander.Header>
                <StackPanel>
                    <Label Content="TF2 path:"/>
                    <TextBox x:Name="tf2" HorizontalAlignment="Stretch" Height="23"  TextWrapping="Wrap" VerticalAlignment="Top" MinWidth="400"
                             Text="{Binding TF2Path}"
                             ToolTip="Path to the steamapps\common\Team Fortress 2 - this button launches tf_win64.exe from there with special settings"/>

                    <Separator />

                    <StackPanel Orientation="Horizontal">

                        <Label Content="Rcon Password:" ToolTip="set to anything if launching TF2 from here"/>
                        <TextBox x:Name="rconPass" HorizontalAlignment="Left" Height="23" VerticalAlignment="Top" Width="120"
                         Text="{Binding RconPassword}"/>

                        <Label Content="Port:"  ToolTip="set to anything if launching TF2 from here"/>
                        <TextBox x:Name="rconPort" HorizontalAlignment="Left" Height="23"  VerticalAlignment="Top" Width="60"
                         Text="{Binding RconPort}"/>

                    </StackPanel>
                    <Separator/>
                    <TextBlock Padding="5,0" Text="Add this exec command to your autoexec.cfg to automatically run it on startup."/>
                    <Label Padding="20,0" FontWeight="Heavy"
                           Content="{Binding RconConfigFileBase,FallbackValue=TF2SpectatorRCON}"
                           ContentStringFormat="exec {0}"/>
                    <Button x:Name="autoexec" Content="Install in autoexec.cfg" Command="{Binding AutoExecCommand}"
                            ToolTip="in cfg or, if you're using mastercomfig vpk, cfg\user"/>
                    <TextBlock Padding="5,0" FontStyle="Italic" Text="or invoke that Rcon config file from the 64bit TF2 Console manually (setting above Rcon values creates the config file in the TF2 path):"/>
                    <TextBlock Padding="5,0" FontWeight="Bold" Text="AND (IMPORTANT) add the following to your TF2 Launch Options:"/>
                    <Label Padding="20,0" FontWeight="Heavy"
                           Content="-usercon"/>

                    <TextBlock Padding="5,0" FontStyle="Italic" Text="... or ..."/>

                    <StackPanel Orientation="Horizontal">

                        <Button x:Name="start" HorizontalAlignment="Left" Height="23" VerticalAlignment="Top" MinWidth="75"
                            Content="(Launch TF2)" Command="{Binding LaunchCommand}"
                            ToolTip="Starts TF2 using these settings - DON'T Click if using tf2_bot_detector, instead set the TF2BD logs folder to share its settings"/>
                        <Label Content="▶ from TF2 path"/>

                    </StackPanel>

                    <Separator/>
                    <TextBlock Padding="5,0" FontStyle="Italic" Text="... or ..."/>
                    <TextBlock Padding="5,0" Text="Share Rcon with pazer's tf2_bot_detector"/>
                    <TextBlock Padding="5,0" FontStyle="Italic" Text="(as of April 18, 2024 tf2 bot detector does not work with 64bit TF2 unless it gets an update)"/>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="tf2 bot detector logs:" ToolTip="Auto-fills Rcon if you run tf2_bot_detector"/>
                        <TextBox x:Name="tbdlogs" Height="23" VerticalAlignment="Top" HorizontalAlignment="Stretch"  MinWidth="400"
                         Text="{Binding BotDetectorLog}" TextAlignment="Right"
                         ToolTip="Auto-fills Rcon if you run tf2_bot_detector - set using its folder ...\TF2 Bot Detector\logs"/>

                    </StackPanel>
                    <StackPanel Orientation="Horizontal">

                        <Label Content="🔄"/>
                        <Button x:Name="rescantbd" HorizontalAlignment="Left" Height="23" VerticalAlignment="Top" MinWidth="75"
                            Content="Re-scan current log" Command="{Binding ParseTBDCommand}"
                            ToolTip="Restarting TF2 without restarting tf2_bot_detector requires a re-scan to get the new values"/>

                    </StackPanel>

                    <!--
                    <Label Content="If you use a custom tf2 launch options, you can just add the following entries to your Launch Options:"/>
                    <Label Padding="20,0" FontWeight="Bold"
                           Content="-usercon +ip 0.0.0.0"/>
                    <Label Padding="20,0" FontWeight="Bold"
                           Content="{Binding RconPassword,FallbackValue=AbovePassword}" ContentStringFormat="+rcon_password {0}"/>
                    <Label Padding="20,0" FontWeight="Bold"
                           Content="{Binding RconPort,FallbackValue=AbovePort}" ContentStringFormat="+hostport {0} +net_start"/>
                    <Label Content="But remember to update it if you change the values above."/>
                    -->
                </StackPanel>
            </Expander>

            <Expander IsExpanded="False">
                <Expander.Header>
                    <StackPanel Orientation="Horizontal">

                        <Label Content="Twitch 📺"/>
                        <!--<CheckBox IsChecked="{Binding IsTwitchConnected, Mode=OneWay}" IsEnabled="False"/>-->
                        <Button x:Name="connect" HorizontalAlignment="Left" Height="30" VerticalAlignment="Top" Width="100"
                        Command="{Binding LaunchTwitchCommand}"
                        ToolTip="Using these values - blank auth token first does a browser login">
                            <StackPanel Orientation="Horizontal" Height="28">
                                <Label Content="Link Twitch"/>
                                <CheckBox IsChecked="{Binding IsTwitchConnected, Mode=OneWay}" IsEnabled="False"/>
                            </StackPanel>
                        </Button>

                    </StackPanel>
                </Expander.Header>
                <StackPanel>
                    <StackPanel Orientation="Horizontal">

                        <Label Content="Twitch User/Channel:"/>
                        <TextBox x:Name="twitchUser" HorizontalAlignment="Left" Height="23" VerticalAlignment="Top" Width="120"
                         Text="{Binding TwitchUsername}"/>
                        <Label Content="Latest Auth Token:"/>
                        <TextBox x:Name="twitchAuth" HorizontalAlignment="Left" Height="23" VerticalAlignment="Top" Width="220"
                         Text="{Binding AuthToken}"
                         ToolTip="Empty = Twitch Authorization request will be launched in your browser. Not empty = will attempt to just use that token."/>

                    </StackPanel>

                    <Label Content="Twitch Connect Chat Message:"/>
                    <TextBox x:Name="twitchConnectMessage" HorizontalAlignment="Left" Height="23" VerticalAlignment="Top" Width="350"
                         Text="{Binding TwitchConnectMessage}"/>

                </StackPanel>
            </Expander>

            <Expander IsExpanded="False" DataContext="{Binding LobbyTrackerModel}">
                <Expander.Header>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="Bot Kicking ☠👎"/>
                        <Button x:Name="OpenLobby" HorizontalAlignment="Center"
                                Content="Watch game lobby for bots"
                                Command="{Binding OpenLobbyCommand}"
                                ToolTip="Activate automatic bot kicking and related features - mark new bots/cheaters in the list below"/>
                    </StackPanel>
                </Expander.Header>
                <StackPanel Orientation="Vertical">
                    <TextBlock Padding="5,0" HorizontalAlignment="Center" Text="Requires a good TF2 Rcon connection and a configured TF2 Path."/>

                    <TextBlock Padding="10,5,10,0" 
                               TextWrapping="Wrap" TextAlignment="Right" FontStyle="Italic">
                        Party chat suggestions go to your whole party and wait for your response key - 
                        {0} is the bot name,
                        {1} and {2} are response keys,
                        {3} is 'kick' on your team, 'mark' on the other<!--,-->
                        <!--{4} might be the twitch user name-->
                    </TextBlock>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <CheckBox x:Name="IsSuggestingMuted" Content="‼🔇 suggest past mutes as bots? Chat announcement:"
                                  Margin="4"
                                  Grid.Row="1" Grid.Column="0"
                                  IsChecked="{Binding BotConfig.IsSuggestingMuted}"/>
                        <TextBox x:Name="MutedMessage" Text="{Binding BotConfig.MutedMessage}"
                                 Style="{StaticResource ResourceKey=PartyChat}"
                                 Grid.Row="1" Grid.Column="1"
                                 IsEnabled="{Binding ElementName=IsSuggestingMuted,Path=IsChecked}" 
                                 />

                        <CheckBox x:Name="IsSuggestingCommonNames" Content="‼☠suggest names like known bots? Chat announcement:"
                                  Margin="4"
                                  Grid.Row="2" Grid.Column="0"
                                  IsChecked="{Binding BotConfig.IsSuggestingNames}"/>
                        <TextBox x:Name="NameMessage" Text="{Binding BotConfig.NameMessage}"
                                 Style="{StaticResource ResourceKey=PartyChat}"
                                 Grid.Row="2" Grid.Column="1"
                                 IsEnabled="{Binding ElementName=IsSuggestingCommonNames,Path=IsChecked}" 
                                 />

                        <Label Content="💬 suggested by 'kick a bot...' command. Chat announcement:" 
                               Grid.Row="3" Grid.Column="0"/>
                        <TextBox x:Name="TwitchSuggestionMessage" Text="{Binding BotConfig.TwitchSuggestionMessage}"
                                 Style="{StaticResource ResourceKey=PartyChat}"
                                 Grid.Row="3" Grid.Column="1"/>

                        <Label Content="🔊 Suggestion announcement Sound"
                               Background="Yellow"
                               Grid.Row="4" Grid.Column="0"/>
                        <ComboBox x:Name="SuggestionSound" HorizontalAlignment="Left"
                                  SelectedValue="{Binding BotConfig.SuggestionSound}"
                                  ItemsSource="{Binding SOUNDS}" DisplayMemberPath="Description"
                                  Grid.Row="4" Grid.Column="1"/>

                        <Label Content="⌨ mark 👎 'bot' response key ({1} in party chat):" 
                                Grid.Row="5" Grid.Column="0"/>
                        <ComboBox x:Name="BotBind" HorizontalAlignment="Left"
                                  SelectedValue="{Binding BotConfig.BotBind}" 
                                  ItemsSource="{Binding BINDKEYS}"
                                  Grid.Row="5" Grid.Column="1"/>

                        <Label Content="⌨ mark 💚 'no kick' response key ({2} in party chat):"
                               Grid.Row="6" Grid.Column="0"/>
                        <ComboBox x:Name="NoKickBind" HorizontalAlignment="Left"
                                  SelectedValue="{Binding BotConfig.NoKickBind}" 
                                  ItemsSource="{Binding BINDKEYS}"
                                  Grid.Row="6" Grid.Column="1"/>

                        <Label Content="🔊 Kicking announcement Sound"
                               Background="Red"
                               Grid.Row="7" Grid.Column="0"/>
                        <ComboBox x:Name="KickingSound" HorizontalAlignment="Left"
                                  SelectedValue="{Binding BotConfig.KickingSound}"
                                  ItemsSource="{Binding SOUNDS}" DisplayMemberPath="Description"
                                  Grid.Row="7" Grid.Column="1"/>

                        <!--<Label Content="🔊Other team has bots Sound"
                               Grid.Row="7" Grid.Column="0"/>
                        <ComboBox x:Name="OtherTeamBotSound" HorizontalAlignment="Left"
                                  SelectedValue="{Binding OtherTeamBotSound}"
                                  ItemsSource="{Binding SOUNDS}" DisplayMemberPath="Description"
                                  Grid.Row="7" Grid.Column="1"/>

                        <Label Content="🔊No more bots Sound"
                               Grid.Row="8" Grid.Column="0"/>
                        <ComboBox x:Name="NoMoreBotsSound" HorizontalAlignment="Left"
                                  SelectedValue="{Binding NoMoreBotsSound}"
                                  ItemsSource="{Binding SOUNDS}" DisplayMemberPath="Description"
                                  Grid.Row="8" Grid.Column="1"/>-->
                    </Grid>

                    <Separator/>
                    <TextBlock Padding="5,0" Text="Optionally add 'Vote Eraser' HUD mod from pazer's system to silence and hide failed vote attempts:"/>
                    <Button x:Name="InstallVoteEraser" HorizontalAlignment="Center"
                            Content="Install Vote Eraser"
                            Command="{Binding InstallVoteEraserCommand}"/>
                </StackPanel>
            </Expander>

            <Separator />

            <Expander Header="Log 📜" IsExpanded="True" MaxHeight="235">
                <ScrollViewer x:Name="logScroller" VerticalScrollBarVisibility="Visible">
                    <TextBox x:Name="log" HorizontalAlignment="Left" MinHeight="70" TextWrapping="Wrap" VerticalContentAlignment="Stretch" MinWidth="700"
                         Text="{Binding CommandLog}" 
                         BorderBrush="Transparent"
                         Background="Transparent" BorderThickness="0"
                         Padding="5 0 0 0"
                         IsReadOnly="True" IsReadOnlyCaretVisible="True" IsInactiveSelectionHighlightEnabled="True" TextChanged="log_TextChanged"/>
                </ScrollViewer>
            </Expander>

            <Expander Header="Testing for TF2 commands" IsExpanded="False">
                <StackPanel>
                    <ToolBar Height="33" Margin="0,0,0,0"  HorizontalAlignment="Stretch" VerticalAlignment="Top">

                        <Menu x:Name="localcommands" IsMainMenu="True" >
                            <MenuItem Header="TF2 Test Commands">
                                <MenuItem Header="test echo" CommandParameter="echo test" Command="{Binding SendCommand}"/>
                                <MenuItem Header="toggleconsole" CommandParameter="toggleconsole" Command="{Binding SendCommand}"/>
                                <MenuItem Header="quit" CommandParameter="quit" Command="{Binding SendCommand}"/>
                                <Separator/>
                                <MenuItem Header="Edit Commands..." Command="{Binding OpenCommandsCommand}"/>
                            </MenuItem>
                        </Menu>

                    </ToolBar>

                    <StackPanel Orientation="Horizontal">
                        <ComboBox x:Name="TestSound" HorizontalAlignment="Left"
                                  SelectedIndex="0"
                                  SelectedValue="{Binding TestSound}"
                                  ItemsSource="{Binding LobbyTrackerModel.SOUNDS}" DisplayMemberPath="Description"
                                  />
                        <Button x:Name="TestSoundCommand" Content="📡Play Sound" HorizontalAlignment="Left" VerticalAlignment="Top" Width="100"
                          Command="{Binding PlaySoundCommand}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">

                        <Label Content="console command:"/>

                        <TextBox x:Name="input" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" VerticalAlignment="Top" Width="250"
                           Text="{Binding CommandString}"/>
                        <Button x:Name="send" Content="📡Send" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75"
                          Command="{Binding SendCommand}"/>
                        <Label Content="output:"/>
                        <TextBlock x:Name="output" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" VerticalAlignment="Top" Width="120"
                             Text="{Binding OutputString, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, BindsDirectlyToSource=True}" />

                    </StackPanel>
                </StackPanel>
            </Expander>

        </StackPanel>
    </ScrollViewer>
</Window>
